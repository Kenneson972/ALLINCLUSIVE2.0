#!/usr/bin/env python3
"""
Script de nettoyage final pour supprimer les anciennes sections
et ne garder que la section unifi√©e "Informations Compl√®tes et Tarifs"
"""

import os
import re
import glob

def clean_old_sections(file_path):
    """Supprime toutes les anciennes sections sauf la nouvelle section unifi√©e"""
    
    filename = os.path.basename(file_path)
    
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # Compter les sections avant nettoyage
    info_count_before = content.count('Information')
    
    # Patterns pour supprimer les ANCIENNES sections (pas la nouvelle)
    old_patterns = [
        # Ancienne section "Informations et Tarifs D√©taill√©s" (sans "Compl√®tes")
        r'<!-- Informations et Tarifs D√©taill√©s -->.*?</div>\s*</div>',
        # Sections avec h3 "Informations et Tarifs" (pas "Compl√®tes")
        r'<h3[^>]*>.*?<i class="fas fa-info-circle[^>]*></i>\s*Informations et Tarifs\s*</h3>.*?</div>\s*</div>(?!</div>\s*</div>)',
        # Sections orphelines avec tarifs basiques
        r'<div class="mb-6">\s*<h4[^>]*>üìã Tarification</h4>.*?</div>\s*</div>',
        r'<div class="mb-6">\s*<h4[^>]*>üìù Conditions de Location</h4>.*?</div>\s*</div>',
    ]
    
    sections_removed = 0
    
    # Supprimer les anciennes sections
    for pattern in old_patterns:
        matches = re.findall(pattern, content, re.DOTALL)
        for match in matches:
            # S'assurer qu'on ne supprime pas la section unifi√©e
            if "Informations Compl√®tes et Tarifs" not in match:
                content = content.replace(match, '', 1)
                sections_removed += 1
    
    # Nettoyer les div orphelines vides
    content = re.sub(r'<div[^>]*>\s*</div>', '', content, flags=re.MULTILINE)
    content = re.sub(r'\n\s*\n\s*\n', '\n\n', content)  # Supprimer les lignes vides multiples
    
    # Compter apr√®s nettoyage
    info_count_after = content.count('Information')
    
    if sections_removed > 0:
        # Sauvegarder les changements
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print(f"‚úÖ {filename}: {sections_removed} anciennes sections supprim√©es")
        
        # V√©rifier que la section unifi√©e est toujours pr√©sente
        if "Informations Compl√®tes et Tarifs" in content:
            print(f"   ‚úÖ Section unifi√©e pr√©serv√©e")
        else:
            print(f"   ‚ö†Ô∏è Section unifi√©e manquante!")
        
        return True
    else:
        print(f"‚ÑπÔ∏è {filename}: Aucune ancienne section trouv√©e")
        return False

def main():
    print("üßπ NETTOYAGE FINAL - Suppression des anciennes sections")
    print("=" * 60)
    print("OBJECTIF : Garder SEULEMENT la section 'Informations Compl√®tes et Tarifs'")
    print("=" * 60)
    
    villa_files = glob.glob('/app/villa-*.html')
    villa_files = [f for f in villa_files if 'template' not in f and 'details' not in f]
    
    cleaned_count = 0
    
    for file_path in sorted(villa_files):
        if clean_old_sections(file_path):
            cleaned_count += 1
    
    print("=" * 60)
    print(f"üéØ NETTOYAGE TERMIN√â : {cleaned_count}/{len(villa_files)} villas nettoy√©es")
    print("‚úÖ Chaque villa a maintenant SEULEMENT sa section unifi√©e avec donn√©es CSV")

if __name__ == "__main__":
    main()