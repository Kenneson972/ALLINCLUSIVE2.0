const API_CONFIG={development: 'http: production: './db.json',current: window.location.hostname==='localhost' ? 'development' : 'production'};const dataCache=new Map();const CACHE_DURATION=5*60*1000;async function fetchWithFallback(url,options={}){try{const response=await fetch(url,{...options,headers:{'Content-Type': 'application/json',...options.headers}});if(!response.ok){throw new Error(`HTTP Error: ${response.status}-${response.statusText}`);}const data=await response.json();console.log(`‚úÖ Donn√©es r√©cup√©r√©es depuis: ${url}`);return data;}catch(error){console.warn(`‚ö†Ô∏è Erreur API ${url}:`,error.message);if(API_CONFIG.current==='development'){console.log('üîÑ Fallback vers db.json local...');try{const fallbackResponse=await fetch('./db.json');const fallbackData=await fallbackResponse.json();return fallbackData;}catch(fallbackError){console.error('‚ùå Erreur fallback:',fallbackError);throw new Error('Impossible de charger les donn√©es');}}throw error;}}async function getCachedData(key,fetchFunction){const cached=dataCache.get(key);const now=Date.now();if(cached &&(now-cached.timestamp)< CACHE_DURATION){console.log(`üöÄ Donn√©es en cache pour: ${key}`);return cached.data;}const data=await fetchFunction();dataCache.set(key,{data,timestamp: now});return data;}export async function getVillas(filters={}){console.log('üèñÔ∏è R√©cup√©ration des villas...',filters);return getCachedData('villas',async()=>{const baseUrl=API_CONFIG.current==='development' ? API_CONFIG.development : API_CONFIG.production;if(API_CONFIG.current==='development'){let url=`${baseUrl}/villas`;const params=new URLSearchParams();if(filters.category)params.append('category',filters.category);if(filters.location)params.append('location_like',filters.location);if(filters.min_price)params.append('price_gte',filters.min_price);if(filters.max_price)params.append('price_lte',filters.max_price);if(filters.guests)params.append('guests_gte',filters.guests);if(params.toString())url+=`?${params.toString()}`;const data=await fetchWithFallback(url);return data;}else{const data=await fetchWithFallback(baseUrl);let villas=data.villas || [];if(filters.category){villas=villas.filter(villa=> villa.category===filters.category);}if(filters.location){villas=villas.filter(villa=> villa.location.toLowerCase().includes(filters.location.toLowerCase()));}if(filters.min_price){villas=villas.filter(villa=> villa.price >=filters.min_price);}if(filters.max_price){villas=villas.filter(villa=> villa.price <=filters.max_price);}if(filters.guests){villas=villas.filter(villa=> villa.guests >=filters.guests);}return villas;}});}export async function getVillaById(id){console.log(`üè° R√©cup√©ration villa ID: ${id}`);const baseUrl=API_CONFIG.current==='development' ? API_CONFIG.development : API_CONFIG.production;if(API_CONFIG.current==='development'){const data=await fetchWithFallback(`${baseUrl}/villas/${id}`);return data;}else{const data=await fetchWithFallback(baseUrl);const villa=data.villas?.find(v=> v.id===id);if(!villa)throw new Error(`Villa ${id}non trouv√©e`);return villa;}}export async function getPrestataires(filters={}){console.log('ü§ù R√©cup√©ration des prestataires...',filters);return getCachedData('prestataires',async()=>{const baseUrl=API_CONFIG.current==='development' ? API_CONFIG.development : API_CONFIG.production;if(API_CONFIG.current==='development'){let url=`${baseUrl}/prestataires`;const params=new URLSearchParams();if(filters.category)params.append('category',filters.category);if(filters.location)params.append('location_like',filters.location);if(filters.verified)params.append('verified',filters.verified);if(params.toString())url+=`?${params.toString()}`;const data=await fetchWithFallback(url);return data;}else{const data=await fetchWithFallback(baseUrl);let prestataires=data.prestataires || [];if(filters.category){prestataires=prestataires.filter(p=> p.category===filters.category);}if(filters.location){prestataires=prestataires.filter(p=> p.location.toLowerCase().includes(filters.location.toLowerCase()));}if(filters.verified !==undefined){prestataires=prestataires.filter(p=> p.verified===filters.verified);}return prestataires;}});}export async function getEvents(filters={}){console.log('üéâ R√©cup√©ration des √©v√©nements...',filters);return getCachedData('events',async()=>{const baseUrl=API_CONFIG.current==='development' ? API_CONFIG.development : API_CONFIG.production;if(API_CONFIG.current==='development'){let url=`${baseUrl}/events`;const params=new URLSearchParams();if(filters.category)params.append('category',filters.category);if(filters.date)params.append('date',filters.date);if(filters.available)params.append('available_gte',1);if(params.toString())url+=`?${params.toString()}`;const data=await fetchWithFallback(url);return data;}else{const data=await fetchWithFallback(baseUrl);let events=data.events || [];if(filters.category){events=events.filter(e=> e.category===filters.category);}if(filters.date){events=events.filter(e=> e.date===filters.date);}if(filters.available){events=events.filter(e=> e.available > 0);}events.sort((a,b)=> new Date(a.date)-new Date(b.date));return events;}});}export async function getHealth(){console.log('üè• V√©rification sant√© API...');const baseUrl=API_CONFIG.current==='development' ? API_CONFIG.development : API_CONFIG.production;if(API_CONFIG.current==='development'){const data=await fetchWithFallback(`${baseUrl}/health`);return data;}else{const data=await fetchWithFallback(baseUrl);return data.health ||{status: "OK",timestamp: new Date().toISOString(),mode: "static"};}}export async function getStats(){console.log('üìä R√©cup√©ration des statistiques...');const baseUrl=API_CONFIG.current==='development' ? API_CONFIG.development : API_CONFIG.production;if(API_CONFIG.current==='development'){const data=await fetchWithFallback(`${baseUrl}/stats`);return data;}else{const data=await fetchWithFallback(baseUrl);return data.stats ||{total_villas: data.villas?.length || 0,total_prestataires: data.prestataires?.length || 0,total_events: data.events?.length || 0};}}export function clearCache(){console.log('üóëÔ∏è Vidage du cache...');dataCache.clear();}export function getApiConfig(){return{...API_CONFIG,cacheSize: dataCache.size,cacheDuration: CACHE_DURATION};}export default{getVillas,getVillaById,getPrestataires,getEvents,getHealth,getStats,clearCache,getApiConfig};console.log('üöÄ Module fetchData.js initialis√©');console.log(`üìç Environnement: ${API_CONFIG.current}`);console.log(`üîó Base URL: ${API_CONFIG.current==='development' ? API_CONFIG.development : API_CONFIG.production}`);