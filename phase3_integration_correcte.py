#!/usr/bin/env python3
"""
PHASE 3 : INT√âGRATION CORRECTE
Int√©grer les donn√©es CSV dans les 6 vraies villas
"""

import asyncio
from motor.motor_asyncio import AsyncIOMotorClient
import os
from datetime import datetime

# Configuration MongoDB
MONGO_URL = os.getenv('MONGO_URL', 'mongodb://localhost:27017')
DB_NAME = 'khanelconcept'

# MAPPING CORRECT POUR LES 6 VRAIES VILLAS
MAPPING_6_VILLAS = {
    "Villa F3 Petit Macabou": {
        "csv_name": "Villa F3 sur Petit Macabou",
        "pricing": {
            "base_price": 850,
            "weekend": 850,
            "week": 1550,
            "high_season": 1690,
            "details": "Grandes Vacances: 1550‚Ç¨/semaine, Weekend: 850‚Ç¨ (2 nuits), No√´l/Nouvel An: 1690‚Ç¨/semaine"
        },
        "description": "Villa avec possibilit√© d'accueillir 9 invit√©s suppl√©mentaires en journ√©e (9h-20h). Caution: 1500‚Ç¨. Check-in: 16h, Check-out: 11h (possibilit√© extension jusqu'√† 16h selon disponibilit√©).",
        "services": "Chambres climatis√©es, 1 salle de bain avec WC, WC ind√©pendant, salon climatis√© avec canap√©-lit, sauna, jacuzzi, 2 douches ext√©rieures",
        "guests": "6 personnes (jusqu'√† 15 personnes en journ√©e)",
        "location": "Petit Macabou, Vauclin"
    },
    "Villa F5 Ste Anne": {
        "csv_name": "Villa F5 sur Ste Anne",
        "pricing": {
            "base_price": 1350,
            "weekend": 1350,
            "week": 2251,
            "high_season": 2251,
            "details": "Weekend: 1350‚Ç¨ (2 nuits, hors vacances scolaires), Semaine: 2251‚Ç¨ (7 jours)"
        },
        "description": "Possibilit√© d'accueillir jusqu'√† 15 invit√©s de 9h √† 19h. Caution: 500‚Ç¨ en esp√®ces + 1500‚Ç¨ en empreinte CB. Facilit√©s de paiement sans frais suppl√©mentaires avec paiement total avant entr√©e.",
        "services": "4 chambres, 4 salles de bain",
        "guests": "10 personnes (jusqu'√† 15 personnes en journ√©e)",
        "location": "Quartier les Anglais, Ste Anne"
    },
    "Villa F3 POUR LA BACCHA": {
        "csv_name": "Villa F3 POUR LA BACCHA",
        "pricing": {
            "base_price": 1350,
            "weekend": 1350,
            "week": 1350,
            "high_season": 1350,
            "details": "Ao√ªt: 1350‚Ç¨/semaine, Juillet: complet"
        },
        "description": "Possibilit√© d'accueillir jusqu'√† 9 invit√©s entre 9h et 18h. Caution: 1500‚Ç¨ par ch√®que. R√®gles strictes concernant le bruit pour respecter le voisinage.",
        "services": "2 chambres climatis√©es, salon climatis√© avec canap√©-lit",
        "guests": "6 personnes (jusqu'√† 9 invit√©s en journ√©e)",
        "location": "Petit Macabou"
    },
    "Studio Cocooning Lamentin": {
        "csv_name": "Studio Cocooning Lamentin",
        "pricing": {
            "base_price": 290,
            "weekend": 290,
            "week": 2030,
            "high_season": 2030,
            "details": "√Ä partir de 290‚Ç¨, minimum 2 nuits"
        },
        "description": "Pas d'invit√©s autoris√©s. Location uniquement √† la semaine pendant les vacances scolaires et haute saison touristique. Check-in: 16h, Check-out: 11h (d√©part tardif possible selon disponibilit√©). Paiement en plusieurs fois sans frais possible (tout doit √™tre r√©gl√© avant entr√©e).",
        "services": "Bac √† punch priv√© (petite piscine)",
        "guests": "2 personnes",
        "location": "Hauteurs de Morne Pitault, Lamentin"
    },
    "Villa F6 Petit Macabou": {
        "csv_name": "Villa F6 sur Petit Macabou (s√©jour + f√™te)",
        "pricing": {
            "base_price": 2000,
            "weekend": 2000,
            "week": 3220,
            "high_season": 3220,
            "details": "Weekend: 2000‚Ç¨, Semaine: √† partir de 3220‚Ç¨"
        },
        "description": "Villa somptueuse et tr√®s spacieuse. √âv√©nements ou f√™tes autoris√©s de 9h √† 19h. Mariage ou bapt√™me avec h√©bergements sur demande jusqu'√† 150 invit√©s. Covoiturage recommand√©. Caution: 2500‚Ç¨ par ch√®que.",
        "services": "3 chambres climatis√©es avec salle de bain attenante, 1 mezzanine, 2 studios aux extr√©mit√©s, possibilit√© de louer 3 bungalows suppl√©mentaires avec bac √† punch",
        "guests": "10 √† 13 personnes (jusqu'√† 30 invit√©s pour f√™tes)",
        "location": "Petit Macabou au Vauclin (972)"
    },
    "Espace Piscine Journ√©e Bungalow": {
        "csv_name": "Espace Piscine Journ√©e Bungalow",
        "pricing": {
            "base_price": 350,
            "up_to_20": 350,
            "up_to_40": 550,
            "up_to_60": 750,
            "bungalow_extra": 85,
            "details": "Forfaits Journ√©e (9h-19h): Jusqu'√† 20 invit√©s 350‚Ç¨, Jusqu'√† 40 invit√©s: 550‚Ç¨, Jusqu'√† 60 invit√©s: 750‚Ç¨, Bungalow pour 2 personnes: +85‚Ç¨/nuit"
        },
        "description": "Location de 9h √† 19h uniquement (pas de possibilit√© au-del√† de 19h). Tarifs uniquement pour anniversaires, baby-showers et enterrements de vie. Caution: 1000‚Ç¨ par ch√®que + 250‚Ç¨ en esp√®ces. Autres forfaits sur demande selon type d'√©v√©nement (mariage, bapt√™me, etc.).",
        "services": "Cuisine, salle d'eau, mobilier (chaises, tables), chambre climatis√©e (+80‚Ç¨ suppl√©mentaire)",
        "guests": "10 √† 150 personnes",
        "location": "Martinique"
    }
}

async def connect_to_mongo():
    """Connexion √† MongoDB"""
    client = AsyncIOMotorClient(MONGO_URL)
    db = client[DB_NAME]
    return db

async def verifier_villas_base():
    """V√©rifie les villas dans la base"""
    db = await connect_to_mongo()
    
    print("üìä V√âRIFICATION DES VILLAS EN BASE")
    print("-" * 40)
    
    villas = await db.villas.find({}).to_list(None)
    noms_villas = [villa['name'] for villa in villas]
    
    print(f"Villas en base: {len(villas)}")
    for nom in sorted(noms_villas):
        print(f"   - {nom}")
    
    return noms_villas

async def integrer_donnees_csv():
    """Int√®gre les donn√©es CSV dans chaque villa"""
    db = await connect_to_mongo()
    
    print("\nüîÑ INT√âGRATION DES DONN√âES CSV")
    print("-" * 35)
    
    integrees = 0
    
    for villa_name, csv_data in MAPPING_6_VILLAS.items():
        try:
            # Chercher la villa
            villa = await db.villas.find_one({'name': villa_name})
            
            if not villa:
                print(f"‚ùå Villa non trouv√©e: {villa_name}")
                continue
            
            # Pr√©parer les donn√©es de mise √† jour
            update_data = {
                'price': csv_data['pricing']['base_price'],
                'pricing_details': csv_data['pricing'],
                'description': csv_data['description'],
                'services_full': csv_data['services'],
                'guests_detail': csv_data['guests'],
                'location': csv_data['location'],
                'features': csv_data['services'][:100] + '...' if len(csv_data['services']) > 100 else csv_data['services'],
                'csv_integrated': True,
                'csv_source': csv_data['csv_name'],
                'updated_at': datetime.utcnow()
            }
            
            # Mettre √† jour la villa
            result = await db.villas.update_one(
                {'name': villa_name},
                {'$set': update_data}
            )
            
            if result.matched_count > 0:
                print(f"‚úÖ {villa_name}")
                print(f"   Prix: {villa.get('price', 'N/A')}‚Ç¨ ‚Üí {csv_data['pricing']['base_price']}‚Ç¨")
                print(f"   Source: {csv_data['csv_name']}")
                integrees += 1
            else:
                print(f"‚ùå √âchec mise √† jour: {villa_name}")
                
        except Exception as e:
            print(f"‚ùå Erreur {villa_name}: {e}")
    
    return integrees

async def verifier_integration():
    """V√©rifie que l'int√©gration a fonctionn√©"""
    db = await connect_to_mongo()
    
    print(f"\nüìä V√âRIFICATION DE L'INT√âGRATION")
    print("-" * 35)
    
    # Compter les villas avec CSV int√©gr√©
    villas_avec_csv = await db.villas.count_documents({'csv_integrated': True})
    
    print(f"Villas avec CSV int√©gr√©: {villas_avec_csv}")
    
    # Afficher les d√©tails
    villas = await db.villas.find({'csv_integrated': True}).to_list(None)
    
    for villa in sorted(villas, key=lambda x: x['name']):
        pricing = villa.get('pricing_details', {})
        print(f"   {villa['name']}: {pricing.get('base_price', 'N/A')}‚Ç¨")
    
    return villas_avec_csv

async def verifier_api():
    """V√©rifie que l'API retourne les bonnes donn√©es"""
    print(f"\nüîç V√âRIFICATION API")
    print("-" * 20)
    
    try:
        import requests
        response = requests.get("https://cfc0e6ef-086c-461a-915c-2319466028f1.preview.emergentagent.com/api/villas")
        
        if response.status_code == 200:
            villas = response.json()
            print(f"‚úÖ API fonctionne: {len(villas)} villas")
            
            # V√©rifier quelques villas
            for villa in villas[:3]:
                pricing = villa.get('pricing_details')
                if pricing:
                    print(f"   {villa['name']}: {pricing.get('base_price', 'N/A')}‚Ç¨ (CSV ‚úÖ)")
                else:
                    print(f"   {villa['name']}: {villa.get('price', 'N/A')}‚Ç¨ (CSV ‚ùå)")
            
            return True
        else:
            print(f"‚ùå API erreur: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erreur API: {e}")
        return False

async def main():
    """Fonction principale Phase 3"""
    print("üîß PHASE 3 : INT√âGRATION CORRECTE")
    print("=" * 40)
    
    try:
        # V√©rifier les villas en base
        villas_base = await verifier_villas_base()
        
        if len(villas_base) != 6:
            print(f"‚ö†Ô∏è  Attention: {len(villas_base)} villas au lieu de 6")
        
        # Int√©grer les donn√©es CSV
        integrees = await integrer_donnees_csv()
        
        # V√©rifier l'int√©gration
        villas_avec_csv = await verifier_integration()
        
        # V√©rifier l'API
        api_ok = await verifier_api()
        
        # Rapport final
        db = await connect_to_mongo()
        rapport = {
            'phase': 3,
            'date': datetime.utcnow(),
            'villas_en_base': len(villas_base),
            'villas_integrees': integrees,
            'villas_avec_csv': villas_avec_csv,
            'api_functional': api_ok,
            'success': integrees == 6 and villas_avec_csv == 6
        }
        
        await db.integration_phase3_report.insert_one(rapport)
        
        print(f"\nüìä R√âSULTATS PHASE 3:")
        print(f"   - Villas en base: {len(villas_base)}")
        print(f"   - Villas int√©gr√©es: {integrees}")
        print(f"   - Villas avec CSV: {villas_avec_csv}")
        print(f"   - API fonctionnelle: {'‚úÖ' if api_ok else '‚ùå'}")
        
        if integrees == 6 and villas_avec_csv == 6:
            print(f"\n‚úÖ PHASE 3 TERMIN√âE AVEC SUCC√àS")
            print(f"üéØ Toutes les villas ont leurs donn√©es CSV int√©gr√©es")
        else:
            print(f"\n‚ö†Ô∏è  PHASE 3 TERMIN√âE AVEC AVERTISSEMENT")
            print(f"üéØ {integrees}/{6} villas int√©gr√©es")
        
    except Exception as e:
        print(f"‚ùå Erreur Phase 3: {e}")

if __name__ == "__main__":
    asyncio.run(main())